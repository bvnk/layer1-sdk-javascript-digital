/**
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Address from '../com.layer1.clients.digital.model/Address';
import ApiError from '../com.layer1.clients.digital.model/ApiError';
import CreateAddressRequest from '../com.layer1.clients.digital.model/CreateAddressRequest';
import PaginatedResultAddress from '../com.layer1.clients.digital.model/PaginatedResultAddress';
import ValidateAddressRequest from '../com.layer1.clients.digital.model/ValidateAddressRequest';
import ValidateAddressResponse from '../com.layer1.clients.digital.model/ValidateAddressResponse';

/**
* Address service.
* @module com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi
* @version 1.0.0
*/
export default class AddressApi {

    /**
    * Constructs a new AddressApi. 
    * @alias module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi
    * @class
    * @param {module:com.layer1.clients.digital.invoker/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:com.layer1.clients.digital.invoker/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createAddress operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~createAddressCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Address} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new address
     * Creates a new address
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/CreateAddressRequest} createAddressRequest 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~createAddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Address}
     */
    createAddress(createAddressRequest, callback) {
      let postBody = createAddressRequest;
      // verify the required parameter 'createAddressRequest' is set
      if (createAddressRequest === undefined || createAddressRequest === null) {
        throw new Error("Missing the required parameter 'createAddressRequest' when calling createAddress");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Address;
      return this.apiClient.callApi(
        '/digital/v1/addresses', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAddress operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~getAddressCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Address>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get address
     * Retrieve select address details
     * @param {String} addressId 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~getAddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Address>}
     */
    getAddress(addressId, callback) {
      let postBody = null;
      // verify the required parameter 'addressId' is set
      if (addressId === undefined || addressId === null) {
        throw new Error("Missing the required parameter 'addressId' when calling getAddress");
      }

      let pathParams = {
        'addressId': addressId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Address];
      return this.apiClient.callApi(
        '/digital/v1/addresses/{addressId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAddresses operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~listAddressesCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/PaginatedResultAddress} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List addresses
     * Retrieve paginated list of addresses
     * @param {String} assetPoolId 
     * @param {Number} pageNumber 
     * @param {Number} pageSize 
     * @param {Object} opts Optional parameters
     * @param {String} [q] Query in lucene format. Supported fields: reference, customerId
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~listAddressesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/PaginatedResultAddress}
     */
    listAddresses(assetPoolId, pageNumber, pageSize, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetPoolId' is set
      if (assetPoolId === undefined || assetPoolId === null) {
        throw new Error("Missing the required parameter 'assetPoolId' when calling listAddresses");
      }
      // verify the required parameter 'pageNumber' is set
      if (pageNumber === undefined || pageNumber === null) {
        throw new Error("Missing the required parameter 'pageNumber' when calling listAddresses");
      }
      // verify the required parameter 'pageSize' is set
      if (pageSize === undefined || pageSize === null) {
        throw new Error("Missing the required parameter 'pageSize' when calling listAddresses");
      }

      let pathParams = {
      };
      let queryParams = {
        'assetPoolId': assetPoolId,
        'q': opts['q'],
        'pageNumber': pageNumber,
        'pageSize': pageSize
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResultAddress;
      return this.apiClient.callApi(
        '/digital/v1/addresses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTags operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~listTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/PaginatedResultAddress} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List address tags
     * Retrieve paginated list of address tags
     * @param {String} addressId 
     * @param {Number} pageNumber 
     * @param {Number} pageSize 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~listTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/PaginatedResultAddress}
     */
    listTags(addressId, pageNumber, pageSize, callback) {
      let postBody = null;
      // verify the required parameter 'addressId' is set
      if (addressId === undefined || addressId === null) {
        throw new Error("Missing the required parameter 'addressId' when calling listTags");
      }
      // verify the required parameter 'pageNumber' is set
      if (pageNumber === undefined || pageNumber === null) {
        throw new Error("Missing the required parameter 'pageNumber' when calling listTags");
      }
      // verify the required parameter 'pageSize' is set
      if (pageSize === undefined || pageSize === null) {
        throw new Error("Missing the required parameter 'pageSize' when calling listTags");
      }

      let pathParams = {
        'addressId': addressId
      };
      let queryParams = {
        'pageNumber': pageNumber,
        'pageSize': pageSize
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResultAddress;
      return this.apiClient.callApi(
        '/digital/v1/addresses/{addressId}/tags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the validateAddress operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~validateAddressCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ValidateAddressResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate address
     * Validate a blockchain address
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ValidateAddressRequest} validateAddressRequest 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AddressApi~validateAddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ValidateAddressResponse}
     */
    validateAddress(validateAddressRequest, callback) {
      let postBody = validateAddressRequest;
      // verify the required parameter 'validateAddressRequest' is set
      if (validateAddressRequest === undefined || validateAddressRequest === null) {
        throw new Error("Missing the required parameter 'validateAddressRequest' when calling validateAddress");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidateAddressResponse;
      return this.apiClient.callApi(
        '/digital/v1/addresses/validate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
