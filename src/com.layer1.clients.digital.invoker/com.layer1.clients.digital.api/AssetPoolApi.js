/**
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiError from '../com.layer1.clients.digital.model/ApiError';
import AssetPoolSummary from '../com.layer1.clients.digital.model/AssetPoolSummary';
import Balance from '../com.layer1.clients.digital.model/Balance';
import CreateAssetPoolRequest from '../com.layer1.clients.digital.model/CreateAssetPoolRequest';
import UpdateAssetPoolRequest from '../com.layer1.clients.digital.model/UpdateAssetPoolRequest';

/**
* AssetPool service.
* @module com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi
* @version 1.0.0
*/
export default class AssetPoolApi {

    /**
    * Constructs a new AssetPoolApi. 
    * @alias module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi
    * @class
    * @param {module:com.layer1.clients.digital.invoker/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:com.layer1.clients.digital.invoker/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createAssetPool operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~createAssetPoolCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create asset pool
     * Creates a new asset pool which serves as a collection of assets
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/CreateAssetPoolRequest} createAssetPoolRequest 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~createAssetPoolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    createAssetPool(createAssetPoolRequest, callback) {
      let postBody = createAssetPoolRequest;
      // verify the required parameter 'createAssetPoolRequest' is set
      if (createAssetPoolRequest === undefined || createAssetPoolRequest === null) {
        throw new Error("Missing the required parameter 'createAssetPoolRequest' when calling createAssetPool");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/digital/v1/asset-pools', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAssetPool operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~deleteAssetPoolCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete asset pool
     * Delete asset pool with given id if it has not addresses nor transactions created
     * @param {String} assetPoolId 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~deleteAssetPoolCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAssetPool(assetPoolId, callback) {
      let postBody = null;
      // verify the required parameter 'assetPoolId' is set
      if (assetPoolId === undefined || assetPoolId === null) {
        throw new Error("Missing the required parameter 'assetPoolId' when calling deleteAssetPool");
      }

      let pathParams = {
        'assetPoolId': assetPoolId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/digital/v1/asset-pools/{assetPoolId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssetPool operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~getAssetPoolCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get asset pool
     * Retrieve a specific asset pool given id
     * @param {String} assetPoolId 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~getAssetPoolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    getAssetPool(assetPoolId, callback) {
      let postBody = null;
      // verify the required parameter 'assetPoolId' is set
      if (assetPoolId === undefined || assetPoolId === null) {
        throw new Error("Missing the required parameter 'assetPoolId' when calling getAssetPool");
      }

      let pathParams = {
        'assetPoolId': assetPoolId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/digital/v1/asset-pools/{assetPoolId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssetPoolBalance operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~getAssetPoolBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Balance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get asset pool balance
     * Retrieve an asset pool balance for specific network and asset
     * @param {String} assetPoolId 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/String} network 
     * @param {String} asset 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~getAssetPoolBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Balance}
     */
    getAssetPoolBalance(assetPoolId, network, asset, callback) {
      let postBody = null;
      // verify the required parameter 'assetPoolId' is set
      if (assetPoolId === undefined || assetPoolId === null) {
        throw new Error("Missing the required parameter 'assetPoolId' when calling getAssetPoolBalance");
      }
      // verify the required parameter 'network' is set
      if (network === undefined || network === null) {
        throw new Error("Missing the required parameter 'network' when calling getAssetPoolBalance");
      }
      // verify the required parameter 'asset' is set
      if (asset === undefined || asset === null) {
        throw new Error("Missing the required parameter 'asset' when calling getAssetPoolBalance");
      }

      let pathParams = {
        'assetPoolId': assetPoolId
      };
      let queryParams = {
        'network': network,
        'asset': asset
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Balance;
      return this.apiClient.callApi(
        '/digital/v1/asset-pools/{assetPoolId}/balances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssetPoolMaxWithdrawableAmount operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~getAssetPoolMaxWithdrawableAmountCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Balance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get max asset pool withdrawable balance
     * Retrieve maximal approximate (does not take fees into account) amount withdrawable for specific network and asset
     * @param {String} assetPoolId 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/String} network 
     * @param {String} asset 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~getAssetPoolMaxWithdrawableAmountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Balance}
     */
    getAssetPoolMaxWithdrawableAmount(assetPoolId, network, asset, callback) {
      let postBody = null;
      // verify the required parameter 'assetPoolId' is set
      if (assetPoolId === undefined || assetPoolId === null) {
        throw new Error("Missing the required parameter 'assetPoolId' when calling getAssetPoolMaxWithdrawableAmount");
      }
      // verify the required parameter 'network' is set
      if (network === undefined || network === null) {
        throw new Error("Missing the required parameter 'network' when calling getAssetPoolMaxWithdrawableAmount");
      }
      // verify the required parameter 'asset' is set
      if (asset === undefined || asset === null) {
        throw new Error("Missing the required parameter 'asset' when calling getAssetPoolMaxWithdrawableAmount");
      }

      let pathParams = {
        'assetPoolId': assetPoolId
      };
      let queryParams = {
        'network': network,
        'asset': asset
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Balance;
      return this.apiClient.callApi(
        '/digital/v1/asset-pools/{assetPoolId}/max-withdrawable-amount', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssetPoolSummary operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~getAssetPoolSummaryCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/AssetPoolSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get asset pool summary
     * Retrieve authenticated summary across all asset pools.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~getAssetPoolSummaryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/AssetPoolSummary}
     */
    getAssetPoolSummary(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetPoolSummary;
      return this.apiClient.callApi(
        '/digital/v1/asset-pools/summary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAssetPools operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~listAssetPoolsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List asset pools
     * Retrieve paginated list of asset pools
     * @param {Number} pageNumber 
     * @param {Number} pageSize 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~listAssetPoolsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    listAssetPools(pageNumber, pageSize, callback) {
      let postBody = null;
      // verify the required parameter 'pageNumber' is set
      if (pageNumber === undefined || pageNumber === null) {
        throw new Error("Missing the required parameter 'pageNumber' when calling listAssetPools");
      }
      // verify the required parameter 'pageSize' is set
      if (pageSize === undefined || pageSize === null) {
        throw new Error("Missing the required parameter 'pageSize' when calling listAssetPools");
      }

      let pathParams = {
      };
      let queryParams = {
        'pageNumber': pageNumber,
        'pageSize': pageSize
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/digital/v1/asset-pools', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAssetPool operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~updateAssetPoolCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update asset pool
     * Update an asset pool
     * @param {String} assetPoolId 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/UpdateAssetPoolRequest} updateAssetPoolRequest 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/AssetPoolApi~updateAssetPoolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    updateAssetPool(assetPoolId, updateAssetPoolRequest, callback) {
      let postBody = updateAssetPoolRequest;
      // verify the required parameter 'assetPoolId' is set
      if (assetPoolId === undefined || assetPoolId === null) {
        throw new Error("Missing the required parameter 'assetPoolId' when calling updateAssetPool");
      }
      // verify the required parameter 'updateAssetPoolRequest' is set
      if (updateAssetPoolRequest === undefined || updateAssetPoolRequest === null) {
        throw new Error("Missing the required parameter 'updateAssetPoolRequest' when calling updateAssetPool");
      }

      let pathParams = {
        'assetPoolId': assetPoolId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/digital/v1/asset-pools/{assetPoolId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
