/**
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiError from '../com.layer1.clients.digital.model/ApiError';
import ManualActionRequest from '../com.layer1.clients.digital.model/ManualActionRequest';
import PaginatedScreenings from '../com.layer1.clients.digital.model/PaginatedScreenings';

/**
* Screening service.
* @module com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/ScreeningApi
* @version 1.0.0
*/
export default class ScreeningApi {

    /**
    * Constructs a new ScreeningApi. 
    * @alias module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/ScreeningApi
    * @class
    * @param {module:com.layer1.clients.digital.invoker/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:com.layer1.clients.digital.invoker/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listScreenings operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/ScreeningApi~listScreeningsCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/PaginatedScreenings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List screening results
     * Retrieves a paginated list of the most recent transfers along with their screening results.
     * @param {Number} pageNumber 
     * @param {Number} pageSize 
     * @param {Object} opts Optional parameters
     * @param {String} [hash] Filter by transaction hash
     * @param {Array.<module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/String>} [operation] Set of operations to filter by
     * @param {Array.<module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/String>} [state] Set of screening states to filter by
     * @param {Date} [startDate] Start date for filtering by transfer creation date
     * @param {Date} [endDate] End date for filtering by transfer creation date
     * @param {String} [sort = 'screeningId.transfer.id.createdAt,desc')] 
     * @param {String} [q] Query using Lucene-like syntax. Supported properties: notReasonCode, reasonCode, reason, hash, state, operation, from, to
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/ScreeningApi~listScreeningsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/PaginatedScreenings}
     */
    listScreenings(pageNumber, pageSize, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pageNumber' is set
      if (pageNumber === undefined || pageNumber === null) {
        throw new Error("Missing the required parameter 'pageNumber' when calling listScreenings");
      }
      // verify the required parameter 'pageSize' is set
      if (pageSize === undefined || pageSize === null) {
        throw new Error("Missing the required parameter 'pageSize' when calling listScreenings");
      }

      let pathParams = {
      };
      let queryParams = {
        'hash': opts['hash'],
        'operation': this.apiClient.buildCollectionParam(opts['operation'], 'multi'),
        'state': this.apiClient.buildCollectionParam(opts['state'], 'multi'),
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'pageNumber': pageNumber,
        'pageSize': pageSize,
        'sort': opts['sort'],
        'q': opts['q']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedScreenings;
      return this.apiClient.callApi(
        '/digital/v1/screenings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the manuallyActionHeldTransfer operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/ScreeningApi~manuallyActionHeldTransferCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Approve or reject a held transfer
     * Approves or rejects a held transfer based on the provided transfer ID and the destination address ID. Deposits can be only approved.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ManualActionRequest} manualActionRequest 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/ScreeningApi~manuallyActionHeldTransferCallback} callback The callback function, accepting three arguments: error, data, response
     */
    manuallyActionHeldTransfer(manualActionRequest, callback) {
      let postBody = manualActionRequest;
      // verify the required parameter 'manualActionRequest' is set
      if (manualActionRequest === undefined || manualActionRequest === null) {
        throw new Error("Missing the required parameter 'manualActionRequest' when calling manuallyActionHeldTransfer");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/digital/v1/screenings/action', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
