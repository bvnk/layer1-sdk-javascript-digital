/**
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiError from '../com.layer1.clients.digital.model/ApiError';
import CreateKeyPairRequest from '../com.layer1.clients.digital.model/CreateKeyPairRequest';
import KeyPair from '../com.layer1.clients.digital.model/KeyPair';
import PaginatedResultKeyPair from '../com.layer1.clients.digital.model/PaginatedResultKeyPair';

/**
* KeyPair service.
* @module com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/KeyPairApi
* @version 1.0.0
*/
export default class KeyPairApi {

    /**
    * Constructs a new KeyPairApi. 
    * @alias module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/KeyPairApi
    * @class
    * @param {module:com.layer1.clients.digital.invoker/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:com.layer1.clients.digital.invoker/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createKeyPair operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/KeyPairApi~createKeyPairCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/KeyPair} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create key pair
     * Creates a new key pair from which different addresses can be created
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/CreateKeyPairRequest} createKeyPairRequest 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/KeyPairApi~createKeyPairCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/KeyPair}
     */
    createKeyPair(createKeyPairRequest, callback) {
      let postBody = createKeyPairRequest;
      // verify the required parameter 'createKeyPairRequest' is set
      if (createKeyPairRequest === undefined || createKeyPairRequest === null) {
        throw new Error("Missing the required parameter 'createKeyPairRequest' when calling createKeyPair");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = KeyPair;
      return this.apiClient.callApi(
        '/digital/v1/key-pairs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getKeyPair operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/KeyPairApi~getKeyPairCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/KeyPair} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get key pair
     * Retrieve a key pair given id
     * @param {String} keyPairId 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/KeyPairApi~getKeyPairCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/KeyPair}
     */
    getKeyPair(keyPairId, callback) {
      let postBody = null;
      // verify the required parameter 'keyPairId' is set
      if (keyPairId === undefined || keyPairId === null) {
        throw new Error("Missing the required parameter 'keyPairId' when calling getKeyPair");
      }

      let pathParams = {
        'keyPairId': keyPairId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = KeyPair;
      return this.apiClient.callApi(
        '/digital/v1/key-pairs/{keyPairId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listKeyPairs operation.
     * @callback module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/KeyPairApi~listKeyPairsCallback
     * @param {String} error Error message, if any.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/PaginatedResultKeyPair} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List key pairs
     * Retrieve paginated list of key-pairs belonging to a asset pool
     * @param {String} assetPoolId 
     * @param {Number} pageNumber 
     * @param {Number} pageSize 
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.api/KeyPairApi~listKeyPairsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/PaginatedResultKeyPair}
     */
    listKeyPairs(assetPoolId, pageNumber, pageSize, callback) {
      let postBody = null;
      // verify the required parameter 'assetPoolId' is set
      if (assetPoolId === undefined || assetPoolId === null) {
        throw new Error("Missing the required parameter 'assetPoolId' when calling listKeyPairs");
      }
      // verify the required parameter 'pageNumber' is set
      if (pageNumber === undefined || pageNumber === null) {
        throw new Error("Missing the required parameter 'pageNumber' when calling listKeyPairs");
      }
      // verify the required parameter 'pageSize' is set
      if (pageSize === undefined || pageSize === null) {
        throw new Error("Missing the required parameter 'pageSize' when calling listKeyPairs");
      }

      let pathParams = {
      };
      let queryParams = {
        'assetPoolId': assetPoolId,
        'pageNumber': pageNumber,
        'pageSize': pageSize
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['httpSignature', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResultKeyPair;
      return this.apiClient.callApi(
        '/digital/v1/key-pairs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
