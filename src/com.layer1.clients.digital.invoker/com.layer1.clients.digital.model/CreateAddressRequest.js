/**
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateAddressRequest model module.
 * @module com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/CreateAddressRequest
 * @version 1.0.0
 */
class CreateAddressRequest {
    /**
     * Constructs a new <code>CreateAddressRequest</code>.
     * @alias module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/CreateAddressRequest
     */
    constructor() { 
        
        CreateAddressRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateAddressRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/CreateAddressRequest} obj Optional instance to populate.
     * @return {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/CreateAddressRequest} The populated <code>CreateAddressRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAddressRequest();

            if (data.hasOwnProperty('assetPoolId')) {
                obj['assetPoolId'] = ApiClient.convertToType(data['assetPoolId'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('asset')) {
                obj['asset'] = ApiClient.convertToType(data['asset'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAddressRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAddressRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assetPoolId'] && !(typeof data['assetPoolId'] === 'string' || data['assetPoolId'] instanceof String)) {
            throw new Error("Expected the field `assetPoolId` to be a primitive type in the JSON string but got " + data['assetPoolId']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['asset'] && !(typeof data['asset'] === 'string' || data['asset'] instanceof String)) {
            throw new Error("Expected the field `asset` to be a primitive type in the JSON string but got " + data['asset']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }
        // ensure the json data is a string
        if (data['customerId'] && !(typeof data['customerId'] === 'string' || data['customerId'] instanceof String)) {
            throw new Error("Expected the field `customerId` to be a primitive type in the JSON string but got " + data['customerId']);
        }

        return true;
    }


}



/**
 * asset pool id
 * @member {String} assetPoolId
 */
CreateAddressRequest.prototype['assetPoolId'] = undefined;

/**
 * crypto network
 * @member {String} network
 */
CreateAddressRequest.prototype['network'] = undefined;

/**
 * crypto currency for which address(es) should be created. if network is not given will create addreses in all networks supporting given asset
 * @member {String} asset
 */
CreateAddressRequest.prototype['asset'] = undefined;

/**
 * unique identifier for each destination that is receiving funds (whether tag or address). Similar to banking reference it is used to link deposit to a specific invoice
 * @member {String} reference
 */
CreateAddressRequest.prototype['reference'] = undefined;

/**
 * custom non-unique identifier supplied for address that is used to link address to external entity like customer, merchant, company, etc.
 * @member {String} customerId
 */
CreateAddressRequest.prototype['customerId'] = undefined;






export default CreateAddressRequest;

