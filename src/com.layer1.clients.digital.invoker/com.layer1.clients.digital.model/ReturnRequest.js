/**
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReturnRequest model module.
 * @module com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ReturnRequest
 * @version 1.0.0
 */
class ReturnRequest {
    /**
     * Constructs a new <code>ReturnRequest</code>.
     * @alias module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ReturnRequest
     */
    constructor() { 
        
        ReturnRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReturnRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ReturnRequest} obj Optional instance to populate.
     * @return {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ReturnRequest} The populated <code>ReturnRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnRequest();

            if (data.hasOwnProperty('transactionId')) {
                obj['transactionId'] = ApiClient.convertToType(data['transactionId'], 'String');
            }
            if (data.hasOwnProperty('destinationAddress')) {
                obj['destinationAddress'] = ApiClient.convertToType(data['destinationAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReturnRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReturnRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['transactionId'] && !(typeof data['transactionId'] === 'string' || data['transactionId'] instanceof String)) {
            throw new Error("Expected the field `transactionId` to be a primitive type in the JSON string but got " + data['transactionId']);
        }
        // ensure the json data is a string
        if (data['destinationAddress'] && !(typeof data['destinationAddress'] === 'string' || data['destinationAddress'] instanceof String)) {
            throw new Error("Expected the field `destinationAddress` to be a primitive type in the JSON string but got " + data['destinationAddress']);
        }

        return true;
    }


}



/**
 * ID of the transaction to return
 * @member {String} transactionId
 */
ReturnRequest.prototype['transactionId'] = undefined;

/**
 * address into which funds should be returned
 * @member {String} destinationAddress
 */
ReturnRequest.prototype['destinationAddress'] = undefined;






export default ReturnRequest;

