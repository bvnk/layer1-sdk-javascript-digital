/**
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Asset from './Asset';

/**
 * The Network model module.
 * @module com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Network
 * @version 1.0.0
 */
class Network {
    /**
     * Constructs a new <code>Network</code>.
     * @alias module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Network
     */
    constructor() { 
        
        Network.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['tagSupported'] = false;
    }

    /**
     * Constructs a <code>Network</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Network} obj Optional instance to populate.
     * @return {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Network} The populated <code>Network</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Network();

            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('nativeAsset')) {
                obj['nativeAsset'] = ApiClient.convertToType(data['nativeAsset'], 'String');
            }
            if (data.hasOwnProperty('supportedAssets')) {
                obj['supportedAssets'] = ApiClient.convertToType(data['supportedAssets'], [Asset]);
            }
            if (data.hasOwnProperty('tagSupported')) {
                obj['tagSupported'] = ApiClient.convertToType(data['tagSupported'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Network</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Network</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['nativeAsset'] && !(typeof data['nativeAsset'] === 'string' || data['nativeAsset'] instanceof String)) {
            throw new Error("Expected the field `nativeAsset` to be a primitive type in the JSON string but got " + data['nativeAsset']);
        }
        if (data['supportedAssets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['supportedAssets'])) {
                throw new Error("Expected the field `supportedAssets` to be an array in the JSON data but got " + data['supportedAssets']);
            }
            // validate the optional field `supportedAssets` (array)
            for (const item of data['supportedAssets']) {
                Asset.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * crypto network
 * @member {String} network
 */
Network.prototype['network'] = undefined;

/**
 * native network currency
 * @member {String} nativeAsset
 */
Network.prototype['nativeAsset'] = undefined;

/**
 * list of assets supported by network
 * @member {Array.<module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Asset>} supportedAssets
 */
Network.prototype['supportedAssets'] = undefined;

/**
 * whether network supports address tags
 * @member {Boolean} tagSupported
 * @default false
 */
Network.prototype['tagSupported'] = false;






export default Network;

