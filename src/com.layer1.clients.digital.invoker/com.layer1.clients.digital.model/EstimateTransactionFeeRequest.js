/**
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Participant from './Participant';

/**
 * The EstimateTransactionFeeRequest model module.
 * @module com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/EstimateTransactionFeeRequest
 * @version 1.0.0
 */
class EstimateTransactionFeeRequest {
    /**
     * Constructs a new <code>EstimateTransactionFeeRequest</code>.
     * @alias module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/EstimateTransactionFeeRequest
     */
    constructor() { 
        
        EstimateTransactionFeeRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EstimateTransactionFeeRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/EstimateTransactionFeeRequest} obj Optional instance to populate.
     * @return {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/EstimateTransactionFeeRequest} The populated <code>EstimateTransactionFeeRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EstimateTransactionFeeRequest();

            if (data.hasOwnProperty('asset')) {
                obj['asset'] = ApiClient.convertToType(data['asset'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('sources')) {
                obj['sources'] = ApiClient.convertToType(data['sources'], [Participant]);
            }
            if (data.hasOwnProperty('destinations')) {
                obj['destinations'] = ApiClient.convertToType(data['destinations'], [Participant]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EstimateTransactionFeeRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EstimateTransactionFeeRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['asset'] && !(typeof data['asset'] === 'string' || data['asset'] instanceof String)) {
            throw new Error("Expected the field `asset` to be a primitive type in the JSON string but got " + data['asset']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        if (data['sources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sources'])) {
                throw new Error("Expected the field `sources` to be an array in the JSON data but got " + data['sources']);
            }
            // validate the optional field `sources` (array)
            for (const item of data['sources']) {
                Participant.validateJSON(item);
            };
        }
        if (data['destinations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinations'])) {
                throw new Error("Expected the field `destinations` to be an array in the JSON data but got " + data['destinations']);
            }
            // validate the optional field `destinations` (array)
            for (const item of data['destinations']) {
                Participant.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * currency
 * @member {String} asset
 */
EstimateTransactionFeeRequest.prototype['asset'] = undefined;

/**
 * crypto network
 * @member {String} network
 */
EstimateTransactionFeeRequest.prototype['network'] = undefined;

/**
 * (Optional) list of addresses and amounts that fund the transaction
 * @member {Array.<module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Participant>} sources
 */
EstimateTransactionFeeRequest.prototype['sources'] = undefined;

/**
 * (Optional) list of recipient addresses and amounts that benefit from the transaction
 * @member {Array.<module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/Participant>} destinations
 */
EstimateTransactionFeeRequest.prototype['destinations'] = undefined;






export default EstimateTransactionFeeRequest;

