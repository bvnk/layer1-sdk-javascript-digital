/**
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManualActionRequest model module.
 * @module com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ManualActionRequest
 * @version 1.0.0
 */
class ManualActionRequest {
    /**
     * Constructs a new <code>ManualActionRequest</code>.
     * @alias module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ManualActionRequest
     * @param action {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ManualActionRequest.ActionEnum} Screening action to execute on the transfer
     * @param operation {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ManualActionRequest.OperationEnum} Transaction type
     * @param reason {String} Reason for approving or rejecting the suspended transfer
     * @param transferId {String} Transfer identifier for which screening is performed
     */
    constructor(action, operation, reason, transferId) { 
        
        ManualActionRequest.initialize(this, action, operation, reason, transferId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, operation, reason, transferId) { 
        obj['action'] = action;
        obj['operation'] = operation;
        obj['reason'] = reason;
        obj['transferId'] = transferId;
    }

    /**
     * Constructs a <code>ManualActionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ManualActionRequest} obj Optional instance to populate.
     * @return {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ManualActionRequest} The populated <code>ManualActionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManualActionRequest();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('transferId')) {
                obj['transferId'] = ApiClient.convertToType(data['transferId'], 'String');
            }
            if (data.hasOwnProperty('addressId')) {
                obj['addressId'] = ApiClient.convertToType(data['addressId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManualActionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManualActionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ManualActionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['operation'] && !(typeof data['operation'] === 'string' || data['operation'] instanceof String)) {
            throw new Error("Expected the field `operation` to be a primitive type in the JSON string but got " + data['operation']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['transferId'] && !(typeof data['transferId'] === 'string' || data['transferId'] instanceof String)) {
            throw new Error("Expected the field `transferId` to be a primitive type in the JSON string but got " + data['transferId']);
        }
        // ensure the json data is a string
        if (data['addressId'] && !(typeof data['addressId'] === 'string' || data['addressId'] instanceof String)) {
            throw new Error("Expected the field `addressId` to be a primitive type in the JSON string but got " + data['addressId']);
        }

        return true;
    }


}

ManualActionRequest.RequiredProperties = ["action", "operation", "reason", "transferId"];

/**
 * Screening action to execute on the transfer
 * @member {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ManualActionRequest.ActionEnum} action
 */
ManualActionRequest.prototype['action'] = undefined;

/**
 * Transaction type
 * @member {module:com.layer1.clients.digital.invoker/com.layer1.clients.digital.model/ManualActionRequest.OperationEnum} operation
 */
ManualActionRequest.prototype['operation'] = undefined;

/**
 * Reason for approving or rejecting the suspended transfer
 * @member {String} reason
 */
ManualActionRequest.prototype['reason'] = undefined;

/**
 * Transfer identifier for which screening is performed
 * @member {String} transferId
 */
ManualActionRequest.prototype['transferId'] = undefined;

/**
 * Specific destination address identifier for which screening is performed. Required only for deposits.
 * @member {String} addressId
 */
ManualActionRequest.prototype['addressId'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
ManualActionRequest['ActionEnum'] = {

    /**
     * value: "APPROVE"
     * @const
     */
    "APPROVE": "APPROVE",

    /**
     * value: "REJECT"
     * @const
     */
    "REJECT": "REJECT",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};


/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
ManualActionRequest['OperationEnum'] = {

    /**
     * value: "DEPOSIT"
     * @const
     */
    "DEPOSIT": "DEPOSIT",

    /**
     * value: "WITHDRAWAL"
     * @const
     */
    "WITHDRAWAL": "WITHDRAWAL",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};



export default ManualActionRequest;

